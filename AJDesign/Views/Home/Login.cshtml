@model Entidades.Views.VMLogin
@{
    ViewBag.Title = "Login";

    string mensajeAdvertencia;

    if (Request["mensaje"] != null)
    {
        mensajeAdvertencia = Request["mensaje"];
    }
    else
    {
        mensajeAdvertencia = (string)ViewData["mensajeAdvertencia"];
    }

    string mensajeError = (string)ViewData["mensajeError"];
    string mensajeErrorC = (string)ViewData["mensajeErrorC"];
    string mensajeCorrecto = (string)ViewData["mensajeCorrecto"];
}

<h2>Login</h2>

@using (Html.BeginForm("Login", "Home", FormMethod.Post, new { @class = "login100-form validate-form p-b-33 p-t-5" }))
{
    @Html.AntiForgeryToken()

    if (mensajeError != null)
    {
        <div class="p-3 mb-2 bg-danger text-white">@mensajeError</div>
    }
    if (mensajeErrorC != null)
    {
        <div class="p-3 mb-2 bg-danger text-white">@mensajeError</div>
    }
    if (mensajeAdvertencia != null)
    {
        <div class="p-3 mb-2 bg-warning text-white">@mensajeAdvertencia</div>
    }
    if (mensajeCorrecto != null)
    {
        <div class="p-3 mb-2 bg-success text-white">@mensajeCorrecto</div>
    }

    var Mensaje = "";

    if (TempData["Mensaje"] != null)
    {
        Mensaje = TempData["Mensaje"].ToString();
    }

    if (Mensaje == "Login")
    {
        <center><h2 class="alert alert-success"><i>Ingrese sesión</i></h2></center>
    }
    <br>

    <center>
        <div class="breadcrumb">
            <div class="wrap-input100 validate-input">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "btn btn-default", placeholder = Html.DisplayNameFor(x => x.Email) } })
                <span class="focus-input100" data-placeholder="&#xe813;"></span>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div><br>

            <div class="wrap-input100 validate-input">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "btn btn-default", placeholder = Html.DisplayNameFor(x => x.Password), Type = "Password" } })
                <span class="focus-input100" data-placeholder="&#xe813;"></span>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div><br>

            <button type="submit" class="btn btn-info">Login</button>
        </div>
    </center>
}
